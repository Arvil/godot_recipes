<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Physics on Godot Recipes by KidsCanCode</title>
    <link>http://kidscancode.org/godot_recipes/physics/</link>
    <description>Recent content in Physics on Godot Recipes by KidsCanCode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Apr 2019 20:47:11 -0700</lastBuildDate>
    
	<atom:link href="http://kidscancode.org/godot_recipes/physics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Rigid Bodies</title>
      <link>http://kidscancode.org/godot_recipes/physics/godot3_kyn_rigidbody1/</link>
      <pubDate>Sat, 30 Dec 2017 08:12:12 -0700</pubDate>
      
      <guid>http://kidscancode.org/godot_recipes/physics/godot3_kyn_rigidbody1/</guid>
      <description>At the time of this writing, Godot 3.0 is nearing release, and many new users are trying it out. Recently I&amp;rsquo;ve seen a lot of confusion around physics and physics bodies, especially rigid bodies, which are Godot&amp;rsquo;s &amp;ldquo;true&amp;rdquo; physics nodes.
In this tutorial, I&amp;rsquo;ll explain when (and when not) to use rigid bodies, how they work, and demonstrate a few handy tricks to bend them to your will. The examples will use RigidBody2D, but the lessons apply equally to 3D.</description>
    </item>
    
  </channel>
</rss>